* Python

   | Project    | Semantically versioned                             | Size     | Downloads | Results         | Mismatches                                         |
   |------------+----------------------------------------------------+----------+-----------+-----------------+----------------------------------------------------|
   | requests   | Yes, officially                                    | 4500 LOC | 53m       | [[requests]]  ([[#requests][gh]])  | /s:/ 20/44 (45%) out of which 16/44 (36%) breaking |
   |            |                                                    |          |           |                 | /ns:/ 16/44 (36%) out of which 9/44 (20%) breaking |
   | simplejson | Seems like it, not officially                      | 2000 LOC | 182m      | [[simplejson]] ([[#simplejson][gh]]) | /s:/ 6/39 (15%) out of which 1/39 (2%) breaking    |
   |            |                                                    |          |           |                 | /ns:/ identical                                    |
   | docopt     | Seems like it, not officially                      | 600 LOC  | 9m        | [[docopt]] ([[#docopt][gh]])     | /s:/ 2/11 (18%), breaking n/a (docopt is 0.x)      |
   |            |                                                    |          |           |                 | /ns:/ 1/11 (9%), breaking n/a (docopt is 0.x)      |
   | hashids    | "We try to follow Semver, but check the changelog" | 300 LOC  | 154,000   | [[hashids]] ([[#hashids][gh]])    | /s:/ 3/10 (30%) out of which 1/10 (10%) breaking   |
   |            |                                                    |          |           |                 | /ns:/ identical                                    |

* Java

  | Project | Semantically versioned                                                   | Size       | Dependents | Results      | Mismatches                                                                        |
  |---------+--------------------------------------------------------------------------+------------+------------+--------------+-----------------------------------------------------------------------------------|
  | mockito | "semantic versioning is rigorously maintained", but only since Mockito 2 | 11000 LOC  |       8415 | [[mockito]] ([[#mockito][gh]]) | /ast:/ 70/245 (28%) out of which 39/245 (15%) breaking                            |
  |         |                                                                          |            |            |              |                                                                                   |
  | guava   | "We actually do use semantic versioning with Guava." (contributor)       | 150000 LOC |      10700 | [[guava]] ([[#guava][gh]])   | /ast:/ 4/27 (14%) out of which 3/27 (11%) breaking                                |
  |         |                                                                          |            |            |              | /native:/ 0/27, but only 5/27 versions compile                                    |
  | gson    | Seems like it, not officially                                            | 8000 LOC   |       3400 | [[gson]] ([[#gson][gh]])    | /ast:/ 12/34 (35%) out of which 10/34 (29%) breaking                              |
  |         |                                                                          |            |            |              | /native:/ 13/34 (38%) out of which 12/34 (35%) breaking, but 1/34 doesn't compile |

* Evaluations
** requests

   From v1.0.0 to v2.13.0.

   - One misnamed tag
   - Removing random utility methods and classes (that weren't private)
   - New entities appearing and considering that to be "features"
   - General effort not to break function signatures -- new arguments
     have default values
   - One version removing methods like =is_py30=, =is_py31=, =is_py32=
     and so on (methods you don't expect the program to use, should
     have been private),
   - v2.6.0 starts supporting bytearrays, structural typing didn't catch it
     -- maybe a bug?
   - non-"exported" entities also considered, leads to large number of "breaking changes"
   - small modifications to signatures not considered features
   - function alias removed in v2.8.0, not considered breaking
   - v2.10.0 adds new feature (SOCKS proxy) without changing API

   Main problems stem from:
   - Not considering utility methods and classes to be part of API, even though
     they technically are.
   - Giving different subjective weight to changes, so e.g. removing a
     function alias is not considered breaking, or some random iterator.
     Also, if there's been only one breaking change, not mentioned in changelog and not
     bumping major version.
   - Features are introduced with no changes to the API (/autobump's problem?/)

   *Summary*: Autobump was much more conservative and proposed many more breaking changes.

   | 44 total | 22 different w/ structural | 20 different w/o structural | (50%) *FIRST DIFF*                     |
   |          | 16 major changes           | 10 major changes            |                                        |
   |          | 20 different w/ structural | 16 different w/o structural | (35%) *SECOND DIFF, only intended API* |
   |          | 16 major changes           | 9 major changes             |                                        |

   Excluding only obvious stuff:
   #+BEGIN_SRC diff
      --- structural  2017-01-27 23:17:36.158361209 +0000
      +++ nonstructural   2017-01-27 23:16:59.534449019 +0000
      @@ -1,21 +1,19 @@
       v1.0.3 --- v1.0.4 should have been v1.0.3 --- 2.0.0
       v1.0.4 --- v1.1.0 should have been v1.0.4 --- 2.0.0
       v1.1.0 --- v1.2.0 should have been v1.1.0 --- 2.0.0
       v1.2.0 --- v1.2.1 should have been v1.2.0 --- 2.0.0
       v1.2.1 --- v1.2.2 should have been v1.2.1 --- 2.0.0
       v2.0 --- v2.0.0 should have been v2.0 --- 2.0.1
       v2.0.0 --- v2.0.1 should have been v2.0.0 --- 3.0.0
      -v2.0.1 --- v2.1.0 should have been v2.0.1 --- 3.0.0
       v2.2.1 --- v2.3.0 should have been v2.2.1 --- 3.0.0
       v2.3.0 --- v2.4.0 should have been v2.3.0 --- 3.0.0
      -v2.4.1 --- v2.4.2 should have been v2.4.1 --- 3.0.0
      -v2.4.2 --- v2.4.3 should have been v2.4.2 --- 3.0.0
      +v2.4.1 --- v2.4.2 should have been v2.4.1 --- 2.5.0
      +v2.4.2 --- v2.4.3 should have been v2.4.2 --- 2.5.0
       v2.5.1 --- v2.5.2 should have been v2.5.1 --- 3.0.0
       v2.5.3 --- v2.6.0 should have been v2.5.3 --- 2.5.4
       v2.7.0 --- v2.8.0 should have been v2.7.0 --- 3.0.0
      -v2.8.1 --- v2.9.0 should have been v2.8.1 --- 3.0.0
       v2.9.1 --- v2.9.2 should have been v2.9.1 --- 2.10.0
      -v2.9.2 --- v2.10.0 should have been v2.9.2 --- 3.0.0
      +v2.9.2 --- v2.10.0 should have been v2.9.2 --- 2.9.3
       v2.10.0 --- v2.11.0 should have been v2.10.0 --- 3.0.0
       v2.11.1 --- v2.12.0 should have been v2.11.1 --- 3.0.0
      -v2.12.1 --- v2.12.2 should have been v2.12.1 --- 3.0.0
      +v2.12.1 --- v2.12.2 should have been v2.12.1 --- 2.13.0
      v2.12.5 --- v2.13.0 should have been v2.12.5 --- 2.12.6
   #+END_SRC

   Excluding utility files and other unintended stuff:
   #+BEGIN_SRC diff
     --- structural  2017-01-27 23:22:28.241684490 +0000
     +++ nonstructural   2017-01-27 23:21:59.009750667 +0000
     @@ -1,19 +1,15 @@
      v1.0.3 --- v1.0.4 should have been v1.0.3 --- 2.0.0
      v1.1.0 --- v1.2.0 should have been v1.1.0 --- 2.0.0
      v1.2.0 --- v1.2.1 should have been v1.2.0 --- 2.0.0
      v1.2.1 --- v1.2.2 should have been v1.2.1 --- 2.0.0
      v2.0 --- v2.0.0 should have been v2.0 --- 2.0.1
      v2.0.0 --- v2.0.1 should have been v2.0.0 --- 2.1.0
     -v2.0.1 --- v2.1.0 should have been v2.0.1 --- 3.0.0
      v2.2.1 --- v2.3.0 should have been v2.2.1 --- 3.0.0
      v2.3.0 --- v2.4.0 should have been v2.3.0 --- 3.0.0
     -v2.4.1 --- v2.4.2 should have been v2.4.1 --- 3.0.0
     -v2.4.2 --- v2.4.3 should have been v2.4.2 --- 3.0.0
     +v2.4.1 --- v2.4.2 should have been v2.4.1 --- 2.5.0
      v2.5.1 --- v2.5.2 should have been v2.5.1 --- 3.0.0
      v2.5.3 --- v2.6.0 should have been v2.5.3 --- 2.5.4
      v2.7.0 --- v2.8.0 should have been v2.7.0 --- 3.0.0
     -v2.8.1 --- v2.9.0 should have been v2.8.1 --- 3.0.0
      v2.9.1 --- v2.9.2 should have been v2.9.1 --- 2.10.0
     -v2.9.2 --- v2.10.0 should have been v2.9.2 --- 3.0.0
     +v2.9.2 --- v2.10.0 should have been v2.9.2 --- 2.9.3
      v2.10.0 --- v2.11.0 should have been v2.10.0 --- 3.0.0
     -v2.12.1 --- v2.12.2 should have been v2.12.1 --- 3.0.0
     v2.12.5 --- v2.13.0 should have been v2.12.5 --- 2.12.6
   #+END_SRC

** simplejson

   From v3.0.0 to v3.10.0

   39 versions, 6 different w/ both structural and nonstructural (15%)
   Only 1 misidentified breaking change, authors declared patch releases
   as feature releases

   - entities moved to another module, authors bumped the minor version
     (only breaking change proposal)
   - 3.2.0 -- 3.3.0 was definitely a bugfix, maybe an important one?
   - 3.3.3 -- 3.4.0 changed setup.py a bit, considered it a feature
   - 3.5.3 -- 3.6.0 still definitely a bugfix
   - 3.6.5 -- 3.7.0 bugfix

   Package authors may be right:

   #+BEGIN_QUOTE
   It [minor version] MAY be incremented if substantial new
   functionality or improvements are introduced within the private
   code.
   #+END_QUOTE

   If we discount those 5 ambiguous changes, there may actually be only 1!
   That's 2%!

   Main problems are:
   - Moving entities not considered breaking.
   - Changing behaviour of functions w/o changing their signature
     considered a feature.

   *Summary*: Autobump does not know what a 'substantial' new functionality is, i.e.
   it sometimes can't differentiate patch and feature releases. Actually follows Semver the best,
   even though it doesn't claim to do so!

   #+BEGIN_SRC diff
     v3.0.9 --- v3.1.0 should have been v3.0.9 --- 4.0.0
     v3.2.0 --- v3.3.0 should have been v3.2.0 --- 3.2.1
     v3.3.3 --- v3.4.0 should have been v3.3.3 --- 3.3.4
     v3.5.3 --- v3.6.0 should have been v3.5.3 --- 3.5.4
     v3.6.5 --- v3.7.0 should have been v3.6.5 --- 3.6.6
     v3.8.2 --- v3.9.0 should have been v3.8.2 --- 3.8.3
   #+END_SRC

** docopt

   #+BEGIN_QUOTE
   Major version zero (0.y.z) is for initial development. Anything may
   change at any time. The public API should not be considered stable.

   Version 1.0.0 defines the public API. The way in which the version
   number is incremented after this release is dependent on this public
   API and how it changes.
   #+END_QUOTE

   11 versions, 2 different w/ structural, 1 w/o structural

   - 0.4.1 -- 0.4.2 renames a function (parse_args → parse_argv)

   diff: [[python_diff_docopt.txt]]

** hashids

   From v0.8.0 to v1.2.0

   10 versions, 3 mismatching both w/ and w/o structural typing (30%)

   - one missing version
   - one renaming of functions (encrypt → encode) not considered breaking
   - one performance optimization marked as a feature

   *Summary*: Autobump caught two author mistakes.

   #+BEGIN_SRC diff
     v0.8.1 --- v0.8.3 should have been v0.8.1 --- 0.8.2
     v1.0.1 --- v1.0.2 should have been v1.0.1 --- 2.0.0
     v1.1.0 --- v1.2.0 should have been v1.1.0 --- 1.1.1
   #+END_SRC
** mockito

   From v1.0 to v2.6.9

   java_ast from v2.2.0 to v2.6.9:
   - Very small additions, like one new method, overloaded method, exception or class considered patches
   - v2.2.21 --- v2.2.22 proposes a major change because of a wildcard import
   - v2.3.6 --- v2.3.9 versions skipped
   - v2.3.11 --- v2.4.0 introduced verification listeners, even though that already happened earlier
   - v2.4.5 --- v2.5.0 adds new features w/o changing API
   - v2.6.0 "prepares Android library for publication", even though changes to it happened before

   Main problems (/java_ast/):

   - Adding one or two new methods, classes, not considered a feature
   - Most missed major releases see the removal of very few random entities
   - Other major releases are because of changing signature slightly (Object → T)
   - At least some major because of wildcard imports *bug in autobump*
   - Waiting for those to aggregate, then considered a feature release
     BUT! Autobump claims it's a patch because nothing changed since the last one,
     i.e. features were already present.
     (/Overly frequent releases?/)

   | 245 versions | /java_ast/           | /java_native/ |
   |              | 70 different (30%)   |               |
   |              | 39 major             |               |
   |              | 22 feature additions |               |
   |              | 9 patches            |               |

   java_ast from v2.2.0 to v2.6.9:
   #+BEGIN_SRC text
     v2.2.2 --- v2.2.3 should have been v2.2.2 --- 2.3.0
     v2.2.10 --- v2.2.11 should have been v2.2.10 --- 2.3.0
     v2.2.11 --- v2.2.12 should have been v2.2.11 --- 2.3.0
     v2.2.19 --- v2.2.20 should have been v2.2.19 --- 2.3.0
     v2.2.21 --- v2.2.22 should have been v2.2.21 --- 3.0.0
     v2.3.0 --- v2.3.1 should have been v2.3.0 --- 2.4.0
     v2.3.1 --- v2.3.2 should have been v2.3.1 --- 2.4.0
     v2.3.2 --- v2.3.3 should have been v2.3.2 --- 2.4.0
     v2.3.6 --- v2.3.9 should have been v2.3.6 --- 2.3.7
     v2.3.9 --- v2.3.10 should have been v2.3.9 --- 2.4.0
     v2.3.11 --- v2.4.0 should have been v2.3.11 --- 2.3.12
     v2.4.0 --- v2.4.1 should have been v2.4.0 --- 2.5.0
     v2.4.5 --- v2.5.0 should have been v2.4.5 --- 2.4.6
     v2.5.0 --- v2.5.1 should have been v2.5.0 --- 2.6.0
     v2.5.1 --- v2.5.2 should have been v2.5.1 --- 2.6.0
     v2.5.7 --- v2.6.0 should have been v2.5.7 --- 2.5.8
   #+END_SRC

   java_ast from v1.0 to v2.2.0: [[java_ast_mockito_v1.0_to_v2.2.0.txt]]
** guava

   From v1.0 to v20.0, skipping labeled versions (like rcs)

   java_ast:
   - v1.0 -- v2.0 many new additions, but no breaking change, considered major
   - v10.0-rc3 -- v10.0.1 random utility method removed
   - v11.0-rc1 -- v11.0.1 two more random utility methods, they were /deprecated/ though
   - v11.0.1 -- v11.0.2 changes class to enum, *bug in java_ast*, it didn't catch it

   According to semver, deprecation should be minor version number!

   java_native:
   - v2 to v6, v10 to v18 do not compile, 1 or 2 syntax or type errors per build
     out of 27 versions, *only 5 compile*
   - they all agree with the authors though

   *Summary*: 2 author mistakes, 2 autobump bugs, actual mismatches are just 2
   (for such a huge project!)

   | 27 versions | /java_ast/  | /java_native/       |
   |             | 4 different | 0 different         |
   |             | 3 major     | but only 5 compile! |

   java_ast:
   #+BEGIN_SRC diff
     v1.0 --- v2.0 should have been v1.0 --- 1.1.0
     v10.0-rc3 --- v10.0.1 should have been v10.0-rc3 --- 11.0.0
     v11.0-rc1 --- v11.0.1 should have been v11.0-rc1 --- 12.0.0
     v11.0.1 --- v11.0.2 should have been v11.0.1 --- 12.0.0
   #+END_SRC

# Local Variables:
# eval: (visual-line-mode -1)
# End:
** gson

   34 versions, from 1.0 to gson-parent-2.8.0

   java_ast: =al-autobump java_ast -e -d -cstdout -f 1.0 -t gson-parent-2.8.0 > java_ast_changelogs.txt=
   - Nearly every major or patch change makes large API modifications,
     usually not backwards-compatible
   - Seems to mostly ignore semver.

   java_native:
   =al-autobump java_native -e -d -cstdout -f 1.1 -t gson-2.3.1  -bc "mvn compile" -br "target/classes" > java_native_changelogs.txt=
   =al-autobump java_native -e -d -cstdout -f gson-2.4 -t gson-parent-2.8.0 -bc "cd gson && mvn compile" -br "gson/target/classes" >> java_native_changelogs.txt=
   - 1.0 doesn't compile
   - gson-2.4 moves the Pom file, urgh
   - at gson-2.1 -- gson-2.2 it caches the removal of an anonymous inner class, java_ast doesn't

   | 34 total | /java_ast/   | /java_native/ |
   |          | 12 different | 13 different  |
   |          | 10 major     | 12 major      |

   java_ast: [[java_ast_gson.txt]]
   java_native: [[java_native_gson.txt]]

   diff:
   #+BEGIN_SRC diff
     --- java_ast_pure.txt   2017-01-29 17:42:12.662007178 +0000
     +++ java_native_pure.txt    2017-01-29 17:42:00.870032285 +0000
     @@ -1,12 +1,13 @@
       1.1.1 --- 1.2 should have been 1.1.1 --- 2.0.0
       1.2 --- 1.2.1 should have been 1.2 --- 1.3.0
       1.2.2 --- 1.2.3 should have been 1.2.2 --- 2.0.0
       1.2.3 --- 1.3 should have been 1.2.3 --- 2.0.0
       1.3beta3 --- 1.4-beta should have been 1.3beta3 --- 2.0.0
       1.4-beta --- 1.5 should have been 1.4-beta --- 2.0.0
       1.5 --- 1.6 should have been 1.5 --- 2.0.0
       1.6 --- 1.7 should have been 1.6 --- 2.0.0
       gson-2.0 --- gson-2.1 should have been gson-2.0 --- 3.0.0
     + gson-2.1 --- gson-2.2 should have been gson-2.1 --- 3.0.0
       gson-2.2.2 --- gson-2.2.3 should have been gson-2.2.2 --- 3.0.0
     - gson-parent-2.4 --- gson-parent-2.5 should have been gson-parent-2.4 --- 2.4.1
     + gson-parent-2.5 --- gson-parent-2.6 should have been gson-parent-2.5 --- 3.0.0
       gson-parent-2.6.2 --- gson-parent-2.7 should have been gson-parent-2.6.2 --- 3.0.0
   #+END_SRC
